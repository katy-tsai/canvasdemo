{"version":3,"sources":["components/canvas/Canvas.js","components/nineGrid/_nineGrid/drawUtils.js","components/nineGrid/NineGrid.js","components/icons/Icons.js","components/sideBar/SideBar.js","components/layout/Layout.js","components/reactdnd/ReactDnd.js","components/konva/KonvaDemo.js","components/konva/KonvaShapeDemo.js","components/konva/img/u976.png","components/konva/KonvaCropImg.js","components/konva/imageUtil.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","canvasRef","useRef","useState","isPainting","setIsPainting","mousePosition","setMousePosition","startPaint","useCallback","event","coordinates","getCoordinates","exitPaint","paint","newMousePosition","drawLine","originalMousePosition","current","context","getContext","strokeStyle","lineJoin","lineWidth","beginPath","moveTo","x","y","lineTo","closePath","stroke","canvas","rect","getBoundingClientRect","scaleX","width","scaleY","height","pageX","left","pageY","top","useEffect","addEventListener","removeEventListener","className","ref","PI2","Math","PI","color","blockWidth","drawBlock","pos","bgColor","draw","time","ctx","save","translate","fillStyle","fillRect","restore","NineGrid","gridCanvas","requestAnimationFrame","stime","parseInt","arc","i","rotate","scale","o","fill","PaletteIcon","props","NineGridIcon","SideBar","to","activeClassName","Layout","children","ReactDnd","KonvaDemo","useResizeDetector","isSelected","setIsSelected","imgProps","setImgProps","stageRef","imgRef","rectRef","transFormerRef","useImage","image","console","log","onClick","e","getPointerPosition","opacity","nodes","getLayer","batchDraw","draggable","onDragEnd","target","onTransformEnd","node","max","globalCompositeOperation","hitFunc","shape","fillStrokeShape","rotateEnabled","boundBoxFunc","oldBox","newBox","KonvaShapeDemo","sokeWidth","sceneFunc","quadraticCurveTo","KonvaCropImg","aspect","keepSelection","crop","setCrop","completedCrop","setCompletedCrop","onLoad","img","cropImg","document","createElement","naturalWidth","naturalHeight","drawImage","toDataURL","getCroppedImg","style","src","imgSrc","onImageLoaded","onChange","c","onComplete","App","path","exact","component","Canvans","konvaCropImg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.47b91a18.chunk.js","sourcesContent":["import React,{useRef,useState,useEffect,useCallback} from 'react';\n\nconst Canvas = () => {\n  const canvasRef = useRef(null);\n  const [isPainting, setIsPainting] = useState(false);\n  const [mousePosition, setMousePosition] =useState(null);\n  const startPaint = useCallback((event)=>{\n     const coordinates = getCoordinates(event);\n     if (coordinates) {\n       setIsPainting(true);\n       setMousePosition(coordinates);\n     }\n  },[]);\n  const exitPaint = useCallback(()=>{\n    setIsPainting(false);\n  },[]);\n  const paint =useCallback( (event)=>{\n    if(isPainting){\n      const newMousePosition = getCoordinates(event);\n      if(mousePosition && newMousePosition){\n        drawLine(mousePosition,newMousePosition);\n        setMousePosition(newMousePosition);\n      }\n    }\n  },[isPainting,mousePosition]);\n  const drawLine=(originalMousePosition,newMousePosition)=>{\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas =canvasRef.current;\n    const context = canvas.getContext('2d');\n    if(context){\n      context.strokeStyle = '#000';\n      context.lineJoin = 'round';\n      context.lineWidth = 1;\n      context.beginPath();\n      context.moveTo(originalMousePosition.x, originalMousePosition.y);\n      context.lineTo(newMousePosition.x, newMousePosition.y);\n    \n      context.closePath();\n      context.stroke();\n    }\n  }\n  const getCoordinates=(event)=>{\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas =canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;   // relationship bitmap vs. element for X\n    const scaleY = canvas.height / rect.height; \n    return {x:(event.pageX - rect.left)* scaleX, y:(event.pageY - rect.top)*scaleY};\n  }\n  //mousedown\n  useEffect(()=>{\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas= canvasRef.current;\n    canvas.addEventListener('mousedown', startPaint);\n    return () => {\n      canvas.removeEventListener('mousedown', startPaint);\n    };\n  },[startPaint]);\n  //mousemove\n  useEffect(()=>{\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas= canvasRef.current;\n    canvas.addEventListener('mousemove',paint);\n    return () => {\n      canvas.removeEventListener('mousemove',paint);\n    };\n  },[paint])\n  //mouseup or mouseleave\n  useEffect(()=>{\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas= canvasRef.current;\n    canvas.addEventListener('mouseup',exitPaint);\n    canvas.addEventListener('mouseleave',exitPaint);\n    return () => {\n      canvas.removeEventListener('mouseup',exitPaint);\n      canvas.removeEventListener('mouseleave',exitPaint);\n    };\n  },[exitPaint])\n\n  return (\n    <div className=\"canvas-div\">\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default Canvas;\n","\nexport const PI = Math.PI;\nexport const PI2 = Math.PI*2;\nexport const color={\n  red:'#f74456',\n  white:'#fff',\n  yellow:'#f1da56',\n  blue:'#036faf'\n}\nexport const blockWidth = 200;\n\nexport function drawBlock(pos,bgColor,draw,time,ctx){\n  ctx.save();\n  ctx.translate(pos.x*blockWidth,pos.y*blockWidth);\n  ctx.fillStyle=bgColor;\n  ctx.fillRect(0,0,blockWidth,blockWidth);\n  ctx.translate(100,100);\n  draw();\n  ctx.restore();\n}\n","import React,{useRef,useEffect} from 'react';\nimport {blockWidth,drawBlock,color,PI2} from './_nineGrid/drawUtils';\n\nconst NineGrid = () => {\n  const gridCanvas = useRef(null);\n \n  useEffect(()=>{\n    const ctx = gridCanvas.current.getContext(\"2d\");\n    let time=0;\n    function draw(){\n      time++;\n      let stime = parseInt(time/20);\n      drawBlock({x:0,y:0},color.blue,()=>{\n        ctx.beginPath();\n        ctx.arc(0,0,30/(stime%3+1),0,PI2);\n        ctx.strokeStyle=color.white;\n        ctx.lineWidth=13;\n        ctx.stroke();\n        for(let i=0;i<=8;i++){\n          ctx.fillStyle = (stime%8===i)?color.red:color.white;\n          if((i+stime)%4!==0){\n            ctx.fillRect(60,-4,20,8);\n          }        \n          ctx.rotate(PI2/8);\n        }\n      },time,ctx);\n      drawBlock({x:1,y:0},color.red,()=>{\n        ctx.save();\n        ctx.scale(0.8,0.8);\n        ctx.translate(-60,-60);\n        for(let i=0;i<3;i++){\n          ctx.save();\n          for(let o=0;o<3;o++){\n            ctx.beginPath();\n            ctx.arc(0,0,20,0,PI2);\n            ctx.fillStyle=color.white;\n            if((i+o*2+stime)%5===0){\n              ctx.fillStyle=color.yellow;\n            }\n            ctx.fill();\n            ctx.translate(0,60);\n          }\n          ctx.restore();\n          ctx.translate(60,0);        \n        }\n        ctx.restore();\n      },time,ctx);\n      drawBlock({x:2,y:0},color.yellow,()=>{\n\n      },time,ctx);\n      drawBlock({x:0,y:1},color.yellow,()=>{\n\n      },time,ctx);\n      drawBlock({x:1,y:1},color.white,()=>{\n\n      },time,ctx);\n      drawBlock({x:2,y:1},color.blue,()=>{\n\n      },time,ctx);\n      drawBlock({x:0,y:2},color.red,()=>{\n\n      },time,ctx);\n      drawBlock({x:1,y:2},color.blue,()=>{\n\n      },time,ctx);\n      drawBlock({x:2,y:2},color.yellow,()=>{\n\n      },time,ctx);\n      requestAnimationFrame(draw);\n\n    }\n   requestAnimationFrame(draw);\n  },[]);\n  return (\n    <div className=\"nine-gride\">     \n      <canvas ref={gridCanvas} width={blockWidth*3} height={blockWidth*3}>\n      \n      </canvas>\n    </div>\n  );\n};\n\nexport default NineGrid;","import React from 'react';\n\nimport {GiPalette} from 'react-icons/gi';\nimport {BsFillGrid3X3GapFill} from 'react-icons/bs';\nexport const PaletteIcon = (props)=>(\n  <i className=\"icons\">\n        <GiPalette {...props} />\n    </i>\n)\n\nexport const NineGridIcon = (props)=>(\n  <i className=\"icons\">\n        <BsFillGrid3X3GapFill {...props} />\n    </i>\n)","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { PaletteIcon, NineGridIcon } from \"../icons/Icons\";\nconst SideBar = () => {\n  return (\n    <ul className=\"sidebar-div\">\n      <div className=\"sidbar-title\">KATY DEMO</div>\n      <li className=\"menu-item\">\n        <NavLink to=\"/\" activeClassName=\"active\">\n          <PaletteIcon /> canvas 畫板\n        </NavLink>\n      </li>\n      <li className=\"menu-item\">\n        <NavLink to=\"/nineGrid\" activeClassName=\"active\">\n          <NineGridIcon /> 九宮格\n        </NavLink>\n      </li>\n      <li className=\"menu-item\">\n        <NavLink to=\"/reactdnd\" activeClassName=\"active\">\n          <NineGridIcon /> React dnd\n        </NavLink>\n      </li>\n      <li className=\"menu-item\">\n        <NavLink to=\"/konva_demo\" activeClassName=\"active\">\n          <NineGridIcon /> konva demo\n        </NavLink>\n      </li>\n      <li className=\"menu-item\">\n        <NavLink to=\"/konva_shape\" activeClassName=\"active\">\n          <NineGridIcon /> konva shape demo\n        </NavLink>\n      </li>\n      <li className=\"menu-item\">\n        <NavLink to=\"/konva_crop\" activeClassName=\"active\">\n          <NineGridIcon /> konva crop demo\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SideBar;\n","import React from 'react';\nimport SideBar from '../sideBar/SideBar'\nconst Layout = ({children}) => {\n  \n  return (\n    <div className=\"layout-div\">\n      <div className=\"left-div\">\n        <SideBar/>\n      </div>\n      <div className=\"right-div\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;","import React from 'react';\n\nconst ReactDnd = () => {\n  return (\n    <div>\n      dnd\n    </div>\n  );\n};\n\nexport default ReactDnd;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport { Stage, Layer, Image, Rect, Transformer } from \"react-konva\";\nimport useImage from \"use-image\";\nconst KonvaDemo = () => {\n  const { width, height, ref } = useResizeDetector();\n  const [isSelected, setIsSelected] = useState(false);\n  const [imgProps, setImgProps] = useState({});\n  const stageRef = useRef(null);\n  const imgRef = useRef(null);\n  const rectRef = useRef(null);\n  const transFormerRef = useRef(null);\n  const [image] = useImage(\"https://konvajs.github.io/assets/yoda.jpg\");\n  //MdCropRotate =>icons\n  useEffect(() => {\n    setImgProps({ x: 0, y: 0, width: width, height: height });\n  }, [setImgProps, width, height]);\n\n  const stageClickHandler = (e) => {\n    console.log(stageRef.current.getPointerPosition());\n  };\n\n  const editorHandler = (e) => {\n    setIsSelected(true);\n    transFormerRef.current.nodes([imgRef.current]);\n    transFormerRef.current.getLayer().batchDraw();\n  };\n  console.log(\"imgProps\", imgProps);\n  console.log(\"imgref\", imgRef.current);\n\n  return (\n    <div className=\"konva-div\" ref={ref}>\n      <Stage\n        ref={stageRef}\n        width={width}\n        height={height}\n        onClick={stageClickHandler}\n      >\n        <Layer>\n          <Image\n            ref={imgRef}\n            x={imgProps.x}\n            y={imgProps.y}\n            image={image}\n            opacity={1}\n            width={imgProps.width}\n            height={imgProps.height}\n            onClick={editorHandler}\n            draggable={false}\n            onDragEnd={(e) => {\n              setImgProps({\n                ...imgProps,\n                x: e.target.x(),\n                y: e.target.y(),\n              });\n            }}\n            onTransformEnd={(e) => {\n              // transformer is changing scale of the node\n              // and NOT its width or height\n              // but in the store we have only width and height\n              // to match the data better we will reset scale on transform end\n              const node = imgRef.current;\n              const scaleX = node.scaleX();\n              const scaleY = node.scaleY();\n\n              // we will reset it back\n              node.scaleX(1);\n              node.scaleY(1);\n              setImgProps({\n                ...imgProps,\n                x: node.x(),\n                y: node.y(),\n                // set minimal value\n                width: Math.max(5, node.width() * scaleX),\n                height: Math.max(node.height() * scaleY),\n              });\n            }}\n          />\n\n          {/* {isSelected && (\n            <Transformer\n              ref={transFormerRef}\n              rotateEnabled={false}\n              boundBoxFunc={(oldBox, newBox) => {\n                // limit resize\n                if (newBox.width < 5 || newBox.height < 5) {\n                  return oldBox;\n                }\n                return newBox;\n              }}\n            />\n          )} */}\n        </Layer>\n        <Layer globalCompositeOperation={\"xor\"}>\n          <Rect\n            ref={rectRef}\n            width={imgProps.width}\n            height={imgProps.height}\n            x={imgProps.x}\n            y={imgProps.y}\n            fill={\"#fff\"}\n            opacity={0.6}\n            draggable={isSelected}\n            hitFunc={(ctx, shape) => {\n              ctx.rect(0, 0, 200, 200);\n              ctx.fillStyle = \"#fff\";\n              ctx.fill();\n              ctx.fillStrokeShape(shape);\n            }}\n          ></Rect>\n          {isSelected && (\n            <Transformer\n              ref={transFormerRef}\n              rotateEnabled={false}\n              boundBoxFunc={(oldBox, newBox) => {\n                // limit resize\n                console.log(oldBox);\n                console.log(newBox);\n                if (newBox.width < 5 || newBox.height < 5) {\n                  return oldBox;\n                }\n                return newBox;\n              }}\n            />\n          )}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default KonvaDemo;\n","import React, { useRef } from \"react\";\nimport { Layer, Shape, Stage } from \"react-konva\";\nimport { useResizeDetector } from \"react-resize-detector\";\nconst KonvaShapeDemo = () => {\n  const { width, height, ref } = useResizeDetector();\n  const stageRef = useRef(null);\n\n  return (\n    <div className=\"konva-div\" ref={ref}>\n      <Stage ref={stageRef} width={width} height={height}>\n        <Layer>\n          <Shape\n            sokeWidth={4}\n            fill=\"#00D2FF\"\n            stroke=\"black\"\n            sceneFunc={(context, shape) => {\n              context.beginPath();\n              context.moveTo(20, 50);\n              context.lineTo(220, 80);\n              context.quadraticCurveTo(150, 100, 260, 170);\n              context.closePath();\n              context.fillStrokeShape(shape);\n            }}\n            hitFunc={(context) => {}}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default KonvaShapeDemo;\n","export default __webpack_public_path__ + \"static/media/u976.a554c54c.png\";","import React, { useState, useRef, useCallback } from \"react\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport ReactCrop from \"react-image-crop\";\nimport imgSrc from \"./img/u976.png\";\nimport { getCroppedImg } from \"./imageUtil\";\n\nconst KonvaCropImg = () => {\n  const { width, height, ref } = useResizeDetector();\n  const [crop, setCrop] = useState({\n    x: 10,\n    y: 0,\n    aspect: 16 / 9,\n    height: 100,\n    keepSelection: true,\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const imgRef = useRef(null);\n\n  const clickHandler = (e) => {\n    const image = imgRef.current;\n    const cropImg = getCroppedImg(image, completedCrop);\n    console.log(\"cropImg\", cropImg);\n  };\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n  // console.log(\"completedCrop\", completedCrop);\n\n  return (\n    <div className=\"konva-div\" ref={ref}>\n      <button onClick={clickHandler}>click</button>\n      <div style={{ width: `${width}px`, height: `${height}px` }}>\n        <ReactCrop\n          src={imgSrc}\n          crop={crop}\n          onImageLoaded={onLoad}\n          onChange={(c) => setCrop(c)}\n          onComplete={(c) => setCompletedCrop(c)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default KonvaCropImg;\n","export const getCroppedImg = (image, crop) => {\n  const canvas = document.createElement(\"canvas\");\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.drawImage(\n    image,\n    crop.x * scaleX,\n    crop.y * scaleY,\n    crop.width * scaleX,\n    crop.height * scaleY,\n    0,\n    0,\n    crop.width,\n    crop.height\n  );\n\n  // As Base64 string\n  // const base64Image = canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return canvas.toDataURL(\"image/jpeg\");\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Canvans from \"./components/canvas/Canvas\";\nimport NineGrid from \"./components/nineGrid/NineGrid\";\nimport Layout from \"./components/layout/Layout\";\nimport ReactDnd from \"./components/reactdnd/ReactDnd\";\nimport KonvaDemo from \"./components/konva/KonvaDemo\";\nimport KonvaShapeDemo from \"./components/konva/KonvaShapeDemo\";\nimport konvaCropImg from \"./components/konva/KonvaCropImg\";\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact component={Canvans} />\n        <Route path=\"/nineGrid\" component={NineGrid} />\n        <Route path=\"/reactdnd\" component={ReactDnd} />\n        <Route path=\"/konva_demo\" component={KonvaDemo} />\n        <Route path=\"/konva_shape\" component={KonvaShapeDemo} />\n        <Route path=\"/konva_crop\" component={konvaCropImg} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './scss/style.scss';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/canvasdemo\">\n      <App />\n    </BrowserRouter> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}